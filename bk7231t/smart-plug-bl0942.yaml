substitutions:  
  device_name: smart-plug-bl0942
  friendly_name: Smart Plug bl0942
  s_ip: 192.168.x.x


esphome:
  name: $device_name
  friendly_name: $friendly_name
  on_boot:
    priority: 600
    then:       
      - lock.unlock: child_lock      
      - if: # Relay Status OFF
         condition:
           - switch.is_off: relay
         then:
           - light.turn_off: power_led
         else:
           - light.turn_on: power_led
           - delay: 5s    
           - light.turn_on: 
              id: power_led
              brightness: 70%
      - number.set: 
          id: set_num
          value: 5
      - script.execute: power_save
bk72xx:
  board: generic-bk7231t-qfn32-tuya  
  framework:
    version: latest

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_key

ota:
  password: !secret hotspot_pw

wifi:
  id: iptime
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  power_save_mode: HIGH
  fast_connect: True
  manual_ip: 
   static_ip: $s_ip 
   gateway: 192.168.x.x
   subnet: 255.255.255.0
   
  on_connect:
    then:
      - light.turn_on:
          id: power_led
          flash_length: 500ms
      - button.press: wake_up
  on_disconnect:
    then:
      - if: # Relay Status OFF
         condition:
           - switch.is_off: relay
         then:
           - light.turn_off: power_led
         else:
           - light.turn_on: power_led
           - delay: 5s    
           - light.turn_on: 
              id: power_led
              brightness: 70%

  # Enable fallback hotspot in case wifi connection fails
  ap:
    ssid: $device_name
    password: !secret hotspot_pw

captive_portal:

uart:
  id: uart_bus
  tx_pin: P11
  rx_pin: P10
  baud_rate: 4800
  stop_bits: 1

time:
  - platform: homeassistant
    id: homeassistant_time

binary_sensor:
  - platform: status
    name: "API Connection"
    id: c_status
    on_release:
      then:
        - if:
              condition:
                for:
                  time: 60s
                  condition:
                    - binary_sensor.is_off: c_status
              then:
                - button.press: re_start
  - platform: template
    id: warning
    name: 'Overload Warning'
    device_class: problem
    lambda: |-
     if ((id(current).state >= 18) or (id(in_temp).state >= 70)){
     return true;
     } else {
     return false;
     }
  
  # Button on the front is pressed and then toggle relay           
  - platform: gpio
    device_class: power
    internal: True
    pin:
      number: 9
      mode: INPUT_PULLDOWN
      inverted: True
    name: Button # Name to make button visible in HA
    on_click:      
      - min_length: 50ms
        max_length: 1000ms
        then:          
          - if: 
              condition:
                and:
                  - lock.is_unlocked: child_lock
                  - binary_sensor.is_off: warning  
              then: 
               - switch.toggle: relay
              else:
                - repeat:
                    count: 2
                    then:
                      - light.turn_on: power_led
                      - delay: 0.5s
                      - light.turn_off: power_led
                      - delay: 0.5s      
                      - script.execute: led_restore

    on_multi_click:
      - timing:
        - ON for at least 5s   
        - OFF for at least 0.5s     
        then:          
          - if: # if lock is lock, do unlock
              condition:
                lock.is_locked: child_lock
              then:                  
                  - lock.unlock: child_lock
                  - logger.log: "unlock"
                  - light.turn_on: power_led
                  - delay: 1.5s
                  - light.turn_off: power_led
                  - script.execute: led_restore
                  
              else: # if lock is unlock, do lock                  
                  - lock.lock: child_lock
                  - logger.log: "locked"
                  - repeat:
                      count: 2
                      then:
                        - light.turn_on: power_led
                        - delay: 0.5s
                        - light.turn_off: power_led
                        - delay: 0.5s 
                  - script.execute: led_restore
                 
      - timing:
        - ON for at least 10s   
        - OFF for at least 0.5s
        then:
          - button.press: re_start
sensor:
  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name: "WiFi Signal dB"
    id: wifi_signal_db
    internal: true
    update_interval: 300s
    entity_category: "diagnostic"

  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_signal_db
    name: "WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "Signal %"
    entity_category: "diagnostic"
    device_class: ""
    icon: mdi:wifi

  - platform: total_daily_energy
    name: 'Total Daily Energy'
    power_id: power
    unit_of_measurement: 'kWh'
    state_class: total_increasing
    device_class: energy
    accuracy_decimals: 3
    icon: mdi:counter
    filters:
      # Multiplication factor from W to kW is 0.001
      - multiply: 0.001
      
  - platform: internal_temperature
    name: "Internal Temperature"
    id: in_temp
    filters:
      - multiply: 4
    on_value:
      then:
        - if:
            condition:
              and:
                - switch.is_on: switch_olp
                - lambda: return ((id(in_temp).state) >= 70);
            then:
              - logger.log: "Overload Temp"
              - switch.turn_off: relay
              - lambda: id(warning).publish_state(true);     

  - platform: bl0942
    uart_id: uart_bus
    voltage:
      name: 'Voltage'
      id: voltage
      accuracy_decimals: 1
    current:
      name: 'Current'
      id: current
      accuracy_decimals: 1
      on_value:
        - if:
            condition:
              for:
                time: 15ms
                condition:
                  and:
                    - switch.is_on: switch_olp
                    - lambda: return (id(current).state >= 20);
            then:
              - logger.log: "Overload 20A"
              - switch.turn_off: relay
              - lambda: id(warning).publish_state(true);
        - if:
            condition:
              for:
                time: 2min
                condition:
                  and:
                    - switch.is_on: switch_olp
                    - lambda: return (id(current).state >= 18);
            then:
              - logger.log: "Overload 18A"
              - switch.turn_off: relay
              - lambda: id(warning).publish_state(true);
        - if:
            condition:
              for:
                time: 60min
                condition:
                  and:
                    - switch.is_on: switch_olp
                    - lambda: return (id(current).state >= 16 );
            then:
              - logger.log: "Overload 16A"
              - switch.turn_off: relay
              - lambda: id(warning).publish_state(true);
        - script.execute: power_save     
    energy:
      name: 'Energy'
    power:
      name: 'Power'
      id: power
      accuracy_decimals: 1
      filters:
    frequency:
      name: "Frequency"
      accuracy_decimals: 1
    line_frequency: 60Hz
    update_interval: 3s

number:
  - platform: template
    name: "Set Stanby W"
    id: set_num
    optimistic: true
    icon: mdi:numeric
    min_value: 0
    max_value: 100
    unit_of_measurement: W
    step: 5
    on_value:
      then:
        - script.execute: power_save

text_sensor:
  - platform: version
    name: "Esphome Version"
  - platform: wifi_info
    ip_address:
     name: Device IP Address
     
light:
  - platform: status_led    
    name: "Power LED"
    id: power_led
    output: led_out
    restore_mode: ALWAYS_OFF
    internal: true

output:
  - platform: libretiny_pwm
    id: led_out
    pin: 
      number: 6
      inverted: true

button:    
  - platform: restart
    name: "Restart"
    id: re_start
    entity_category: diagnostic
  - platform: template
    name: "Overload Reset"
    on_press: 
      then:
        - lambda: id(warning).publish_state(false);

switch:
# Relay itself
  - platform: gpio
    name: "switch"
    pin: GPIO26
    id: relay
    icon: mdi:power-socket-de
    device_class: outlet
    on_turn_on:
      - light.turn_on: 
          id: power_led
          brightness: 70%
      - script.execute: power_save
    on_turn_off:
      - light.turn_off: power_led
  # Stanby Power Save
  - platform: template
    name: "Save Standby Power"    
    id: switch_save
    icon: mdi:toggle-switch
    restore_mode: RESTORE_DEFAULT_OFF
    optimistic: true
    on_turn_on:    
      - script.execute: power_save
    on_turn_off: 
      - script.stop: power_save
    # Overload Protect
  - platform: template
    name: "OverLoad Protection"    
    id: switch_olp
    restore_mode: RESTORE_DEFAULT_ON
    icon: mdi:toggle-switch
    optimistic: true

  - platform: safe_mode
    internal: true
    id: s_safe
    name: Safe Mode Boot
    entity_category: diagnostic   

lock:  
  - platform: template
    name:  Child's Lock
    id: child_lock
    optimistic: true

script:
  - id: power_save
    mode: restart
    then:
      - delay: 300s
      - if:
          condition:
             and:              
               - switch.is_on: relay
               - switch.is_on: switch_save
               - lambda: return (id(power).state <= id(set_num).state );
          then: 
            - switch.turn_off: relay
  - id: led_restore
    mode: restart
    then:
      - if: # Relay Status OFF
           condition:
             - switch.is_off: relay
           then:
             - light.turn_off: power_led
           else:
             - light.turn_on: power_led
             - delay : 5s
             - light.turn_on: 
                 id: power_led
                 brightness: 70%

